version: '3.8'

services:
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      SA_PASSWORD: "YourStrong!Passw0rd"
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
    volumes:
      - db_data:/var/opt/mssql
    ports:
      - "1433:1433"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${Sa_Password:YourStrong!Passw0rd} -Q 'SELECT 1' || exit 1"]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
  sqlconfigurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      #- ./init:/docker-entrypoint-initdb.d
      - ./create-database.sql:/docker-entrypoint-initdb.d/create-database.sql
    depends_on:
      db:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P ${Sa_Password:YourStrong!Passw0rd} -d master -i docker-entrypoint-initdb.d/create-database.sql;
      echo "All done!";
      '

  liquibase:
    image: liquibase/liquibase
    depends_on:
      db:
        condition: service_healthy
    environment:
      LIQUIBASE_COMMAND_CHANGELOG_FILE: /liquibase-data/changelog.xml
      LIQUIBASE_COMMAND_URL: jdbc:sqlserver://db:1433;databaseName=mydatabase;encrypt=true;trustServerCertificate=true
      LIQUIBASE_COMMAND_USERNAME: sa
      LIQUIBASE_COMMAND_PASSWORD: YourStrong!Passw0rd
      LIQUIBASE_COMMAND_DRIVER: com.microsoft.sqlserver.jdbc.SQLServerDriver
    volumes:
      - ./liquibase:/liquibase-data
    entrypoint: ["sh", "-c", "sleep 30 && liquibase update"] # wait for SQL Server to start

  dotnet-app:
    image: mcr.microsoft.com/dotnet/sdk:6.0
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./dotnet-app:/app
    working_dir: /app
    entrypoint: ["sh", "-c", "sleep 60 && dotnet watch run"]
    ports:
      - "80:5000"

volumes:
  db_data:
